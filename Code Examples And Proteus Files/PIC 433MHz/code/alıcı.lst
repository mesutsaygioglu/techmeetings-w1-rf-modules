CCS PCM C Compiler, Version 5.015, 5967               13-Ara-20 13:41

               Filename:   C:\Users\mesut\Desktop\RF Presentation\PIC 433MHz\code\alýcý.lst

               ROM used:   150 words (7%)
                           Largest free fragment is 1898
               RAM used:   15 (7%) at main() level
                           16 (7%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   04E
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   7F,W
0009:  MOVWF  20
000A:  MOVF   0A,W
000B:  MOVWF  27
000C:  CLRF   0A
000D:  SWAPF  20,F
000E:  MOVF   04,W
000F:  MOVWF  22
0010:  MOVF   77,W
0011:  MOVWF  23
0012:  MOVF   78,W
0013:  MOVWF  24
0014:  MOVF   79,W
0015:  MOVWF  25
0016:  MOVF   7A,W
0017:  MOVWF  26
0018:  BCF    03.7
0019:  BCF    03.5
001A:  MOVLW  8C
001B:  MOVWF  04
001C:  BTFSS  00.5
001D:  GOTO   020
001E:  BTFSC  0C.5
001F:  GOTO   031
0020:  MOVF   22,W
0021:  MOVWF  04
0022:  MOVF   23,W
0023:  MOVWF  77
0024:  MOVF   24,W
0025:  MOVWF  78
0026:  MOVF   25,W
0027:  MOVWF  79
0028:  MOVF   26,W
0029:  MOVWF  7A
002A:  MOVF   27,W
002B:  MOVWF  0A
002C:  SWAPF  21,W
002D:  MOVWF  03
002E:  SWAPF  7F,F
002F:  SWAPF  7F,W
0030:  RETFIE
.................... #include <16F628A.h>  
.................... //////////// Standard Header file for the PIC16F628A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F628A 
....................  
.................... #list 
....................  
.................... #fuses HS,NOWDT,NOPROTECT, NOMCLR,NOLVP,NOPUT,NOCPD 
.................... #use delay (clock=16000000)  
.................... #use rs232(baud=1200, xmit=PIN_B2, rcv=PIN_B1,stop=1, parity=N)  
....................  
....................  char xdata; 
....................  int loopflag=0; 
....................   
....................  #INT_RDA 
....................  void haberlesmekesmesi() 
....................  { 
....................  disable_interrupts(int_rda); 
0031:  BSF    03.5
0032:  BCF    0C.5
....................   
....................  if(getch()=='M')  
0033:  BCF    03.5
0034:  BTFSS  0C.5
0035:  GOTO   034
0036:  MOVF   1A,W
0037:  SUBLW  4D
0038:  BTFSS  03.2
0039:  GOTO   044
....................  { 
....................    while(getch()=='M') {} 
003A:  BTFSS  0C.5
003B:  GOTO   03A
003C:  MOVF   1A,W
003D:  SUBLW  4D
003E:  BTFSC  03.2
003F:  GOTO   03A
....................           xdata=getch(); 
0040:  BTFSS  0C.5
0041:  GOTO   040
0042:  MOVF   1A,W
0043:  MOVWF  28
....................   
....................  } 
....................      loopflag=2;  
0044:  MOVLW  02
0045:  MOVWF  29
....................      enable_interrupts(int_rda); 
0046:  BSF    03.5
0047:  BSF    0C.5
....................      enable_interrupts(GLOBAL); 
0048:  MOVLW  C0
0049:  BCF    03.5
004A:  IORWF  0B,F
....................   
004B:  BCF    0C.5
004C:  BCF    0A.3
004D:  GOTO   020
....................  } 
....................   
....................  void main() 
004E:  MOVF   03,W
004F:  ANDLW  1F
0050:  MOVWF  03
0051:  MOVLW  CF
0052:  BSF    03.5
0053:  MOVWF  19
0054:  MOVLW  A2
0055:  MOVWF  18
0056:  MOVLW  90
0057:  BCF    03.5
0058:  MOVWF  18
0059:  CLRF   29
005A:  MOVLW  07
005B:  MOVWF  1F
005C:  BCF    03.7
....................  { 
....................   
....................  setup_timer_1(T1_DISABLED);  
005D:  CLRF   10
....................  setup_timer_2(T2_DISABLED,0,1);  
005E:  MOVLW  00
005F:  MOVWF  78
0060:  MOVWF  12
0061:  MOVLW  00
0062:  BSF    03.5
0063:  MOVWF  12
....................  setup_CCP1(CCP_OFF);   
0064:  MOVLW  F0
0065:  BCF    03.5
0066:  ANDWF  17,F
....................  set_tris_a(0x00);  
0067:  MOVLW  00
0068:  BSF    03.5
0069:  MOVWF  05
....................  set_tris_b(0x02);  
006A:  MOVLW  02
006B:  MOVWF  06
....................  output_a(0x00); 
006C:  CLRF   05
006D:  BCF    03.5
006E:  CLRF   05
....................  output_high(pin_b4);  
006F:  BSF    03.5
0070:  BCF    06.4
0071:  BCF    03.5
0072:  BSF    06.4
....................   
....................  while(1) 
....................  { 
....................   
....................  enable_interrupts(int_rda); 
0073:  BSF    03.5
0074:  BSF    0C.5
....................  enable_interrupts(GLOBAL); 
0075:  MOVLW  C0
0076:  BCF    03.5
0077:  IORWF  0B,F
....................   
....................   
....................   if (loopflag>1) 
0078:  MOVF   29,W
0079:  SUBLW  01
007A:  BTFSC  03.0
007B:  GOTO   094
....................   {  
....................    
....................    
....................          if(xdata=='A' ) 
007C:  MOVF   28,W
007D:  SUBLW  41
007E:  BTFSS  03.2
007F:  GOTO   088
....................             
....................                { 
....................                  output_high(pin_a3); 
0080:  BSF    03.5
0081:  BCF    05.3
0082:  BCF    03.5
0083:  BSF    05.3
....................                  output_low(pin_a2); 
0084:  BSF    03.5
0085:  BCF    05.2
0086:  BCF    03.5
0087:  BCF    05.2
....................                } 
....................  
....................          if(xdata=='B' ) 
0088:  MOVF   28,W
0089:  SUBLW  42
008A:  BTFSS  03.2
008B:  GOTO   094
....................             
....................                { 
....................                  output_high(pin_a2); 
008C:  BSF    03.5
008D:  BCF    05.2
008E:  BCF    03.5
008F:  BSF    05.2
....................                  output_low(pin_a3); 
0090:  BSF    03.5
0091:  BCF    05.3
0092:  BCF    03.5
0093:  BCF    05.3
....................                } 
....................   } 
0094:  GOTO   073
....................   
....................  
....................   } 
....................   } 
....................  
0095:  SLEEP
....................  

Configuration Fuses:
   Word  1: 3F4A   NOWDT NOPUT HS NOMCLR BROWNOUT NOLVP NOCPD NOPROTECT
